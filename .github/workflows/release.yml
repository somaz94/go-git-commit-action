name: Create release

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"  # v1.0.1, v1.0.2 Îì±Îßå Îß§Ïπ≠

jobs:
  build:
    name: "üöÄ Release"
    runs-on: ubuntu-latest
    steps:
      - name: "üì• Check-out"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ï†ÑÏ≤¥ ÌûàÏä§ÌÜ†Î¶¨ ÌïÑÏöî
      - name: "‚úèÔ∏è Generate release changelog"
        id: generate-release-changelog
        uses: ./
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          onlyLastTag: "true"
          stripHeaders: "true"
          stripGeneratorNotice: "true"
      - name: "üöÄ Create GitHub release"
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: ${{ steps.generate-release-changelog.outputs.changelog }}
      - name: "üè∑Ô∏è Update major version tag"
        run: |
          # Get the current tag (e.g., v1.2.3)
          CURRENT_TAG=${GITHUB_REF#refs/tags/}
          
          # Extract major version (e.g., v1)
          MAJOR_VERSION="v${CURRENT_TAG#v}"
          MAJOR_VERSION="v${MAJOR_VERSION%%.*}"
          
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'
          
          # Delete existing major version tag (local and remote) if it exists
          git tag -d $MAJOR_VERSION || true
          git push origin :refs/tags/$MAJOR_VERSION || true
          
          # Create new major version tag pointing to the current commit
          git tag -a $MAJOR_VERSION -m "Update major version tag to ${CURRENT_TAG}"
          git push origin $MAJOR_VERSION --force
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
