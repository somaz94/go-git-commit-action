name: Create release

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"  # v1.0.1, v1.0.2 Îì±Îßå Îß§Ïπ≠

permissions:
  contents: write  # releasesÏôÄ ÌÉúÍ∑∏Î•º ÏÉùÏÑ±ÌïòÍ∏∞ ÏúÑÌïú Í∂åÌïú
  pull-requests: write  # changelog ÏÉùÏÑ±ÏùÑ ÏúÑÌïú Í∂åÌïú

jobs:
  build:
    name: "üöÄ Release"
    runs-on: ubuntu-latest
    steps:
      - name: "üì• Check-out"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}  # ÌÜ†ÌÅ∞ Ï∂îÍ∞Ä

      - name: Get previous tag
        id: previoustag
        run: |
          # ÌòÑÏû¨ ÌÉúÍ∑∏ Ïù¥Ï†ÑÏùò Í∞ÄÏû• ÏµúÏã† ÌÉúÍ∑∏ Ï∞æÍ∏∞
          CURRENT_TAG="${{ github.ref_name }}"
          PREVIOUS_TAG=$(git tag -l 'v[0-9]*.[0-9]*.[0-9]*' | sort -V | grep -B1 "^${CURRENT_TAG}$" | head -n1)
          echo "PREVIOUS_TAG=${PREVIOUS_TAG}" >> "$GITHUB_ENV"
          echo "CURRENT_TAG=${CURRENT_TAG}" >> "$GITHUB_ENV"

      - name: Generate changelog for release
        id: changelog
        uses: janheinrichmerker/action-github-changelog-generator@v2.4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          futureRelease: ${{ env.CURRENT_TAG }}
          sinceTag: ${{ env.PREVIOUS_TAG }}  # Ïù¥Ï†Ñ ÌÉúÍ∑∏Î∂ÄÌÑ∞
          unreleased: false
          excludeTagsRegex: "^v[0-9]$"
          output: RELEASE.md

      - name: Read changelog
        id: read_changelog
        run: |
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          cat RELEASE.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: "üöÄ Create GitHub release"
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          draft: false
          prerelease: false
          body: ${{ steps.read_changelog.outputs.changelog }}

      - name: "üè∑Ô∏è Update major version tag"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          CURRENT_TAG=${{ github.ref_name }}
          MAJOR_VERSION="${CURRENT_TAG%%.*}"
          COMMIT_SHA=$(git rev-parse ${{ github.sha }})
          
          echo "Current commit SHA: $COMMIT_SHA"
          echo "Updating $MAJOR_VERSION to point to $CURRENT_TAG at commit $COMMIT_SHA"
          
          # Configure git
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'
          
          # Ensure we're on main branch
          git checkout main
          git pull origin main
          
          # Delete old tags
          git tag -d ${MAJOR_VERSION} 
          git push origin -d ${MAJOR_VERSION}

          # Create new tag
          git tag -f ${MAJOR_VERSION} ${COMMIT_SHA}
          git push origin -f ${MAJOR_VERSION}        
